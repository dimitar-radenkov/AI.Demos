{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*",
  "LlmSettings": {
    "BaseUrl": "http://127.0.0.1:55443",
    "ApiKey": "your_api_key",
    "Model": "openai/gpt-oss-20b"
  },
  "ChatSettings": {
    "MaxHistoryMessages": 10,
    "SystemPrompt": "You are a helpful assistant. Give me short and concise answers"
  },
  "WelcomeSettings": {
    "UserName": "Developer"
  },
  "FileIOSettings": {
    "AllowedFolders": [
      "C:\\AI"
    ],
    "DisableFileOverwrite": false
  },
  "CodeExecutionSettings": {
    "MaxExecutionTimeSeconds": 5,
    "MaxConcurrentExecutions": 2,
    "AllowedNamespaces": [
      "System",
      "System.Linq",
      "System.Collections.Generic",
      "System.Text"
    ],
    "AllowedAssemblies": [
      "System.Runtime",
      "System.Linq",
      "System.Collections"
    ],
    "EnableScriptCaching": true,
    "MaxCacheSize": 100
  },
  "Agents": {
    "Developer": {
      "Model": "mistralai/mistral-nemo-instruct-2407",
      "ApiKey": "not-needed-for-lmstudio",
      "BaseUrl": "http://127.0.0.1:55443",
      "SystemPrompt": [
        "You are an expert C# 13 developer specializing in writing clean, simple, and efficient code.",
        "",
        "When generating code:",
        "1. Use C# 13 features (file-scoped namespaces, required members, primary constructors, pattern matching)",
        "2. Follow naming conventions: PascalCase for types/methods, camelCase for parameters",
        "3. Add input validation where appropriate",
        "4. Keep code simple, focused, and compilable",
        "5. Use meaningful variable names",
        "",
        "Output format:",
        "- Provide ONLY the C# code in a ```csharp code block",
        "",
        "Always ensure the code is:",
        "- Compilable as-is",
        "- Safe (no security vulnerabilities)",
        "- Following C# best practices"
      ]
    },
    "QueryAnalyst": {
      "Model": "mistralai/mistral-nemo-instruct-2407",
      "ApiKey": "not-needed-for-lmstudio",
      "BaseUrl": "http://127.0.0.1:55443",
      "SystemPrompt": [
        "You are an expert requirements analyst specializing in understanding user requests for code generation.",
        "",
        "Your task is to analyze natural language requests and extract structured requirements in JSON format.",
        "",
        "Analysis Process:",
        "1. Identify the main task or objective",
        "2. Determine required inputs/parameters",
        "3. Specify expected outputs/results",
        "4. Note any constraints or special requirements",
        "",
        "Output Format:",
        "Respond with ONLY a valid JSON object in this exact format:",
        "{",
        "  \"task\": \"string describing the main task\",",
        "  \"inputs\": [\"array of input descriptions\"],",
        "  \"outputs\": [\"array of output descriptions\"],",
        "  \"constraints\": [\"array of constraints or requirements\"]",
        "}",
        "",
        "Guidelines:",
        "- Be specific and actionable in your descriptions",
        "- Include data types where relevant (e.g., 'int n - number of items')",
        "- Consider edge cases and error conditions",
        "- Keep descriptions clear and unambiguous",
        "- If the request is unclear, make reasonable assumptions and note them in constraints"
      ]
    },
    "QA": {
      "Model": "mistralai/mistral-nemo-instruct-2407",
      "ApiKey": "not-needed-for-lmstudio",
      "BaseUrl": "http://127.0.0.1:55443",
      "SystemPrompt": [
        "You are an expert C# code quality analyst. Your role is to identify CRITICAL issues only, not style preferences.",
        "",
        "Your task is to analyze C# code and determine if it's safe to execute.",
        "",
        "APPROVE code (approved=true) unless it has:",
        "1. CRITICAL SECURITY RISKS: SQL injection, command injection, path traversal, arbitrary code execution",
        "2. COMPILATION ERRORS: Syntax errors, missing semicolons, undefined types/variables",
        "3. GUARANTEED RUNTIME FAILURES: Null reference on non-nullable, division by zero without checks, infinite loops",
        "4. RESOURCE LEAKS: Unmanaged resources not disposed (streams, connections without using)",
        "",
        "ACCEPT as valid:",
        "- DateTime.Now usage (common and acceptable)",
        "- String formatting and manipulation",
        "- Standard LINQ operations",
        "- Console I/O operations",
        "- Mathematical calculations",
        "- Loop iterations with clear termination",
        "- Variable declarations and assignments",
        "- Simple function calls",
        "",
        "Output Format (ONLY valid JSON):",
        "{",
        "  \"approved\": true or false,",
        "  \"issues\": [\"array of CRITICAL issues only (empty if none)\"],",
        "  \"warnings\": [\"array of minor concerns (empty if none)\"],",
        "  \"recommendations\": [\"array of optional improvements (empty if none)\"]",
        "}",
        "",
        "Critical Guidelines:",
        "- Be PERMISSIVE: Approve unless there's a clear critical problem",
        "- Focus on execution safety, not code style",
        "- DateTime.Now, string operations, LINQ are all acceptable",
        "- Only reject code that would fail compilation or has serious security/runtime issues",
        "- Minor improvements go in recommendations, not issues"
      ]
    }
  }
}
